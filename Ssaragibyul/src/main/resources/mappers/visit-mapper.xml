<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="visitMapper">
	<resultMap type="Visit" id="visitResultMap">
		<id property="visitNo" column="VISIT_NO"/>
		<result property="userId" column="USER_ID"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="siteNo" column="SITE_NO"/>
		<result property="visitTitle" column="VISIT_TITLE"/>
		<result property="visitContents" column="VISIT_CONTENTS"/>
		<result property="visitCount" column="VISIT_COUNT"/>
		<result property="vCreateDate" column="V_CREATE_DATE"/>
		<result property="vUpdateDate" column="V_UPDATE_DATE"/>
		<result property="originalFilename" column="ORIGINAL_FILENAME"/>
		<result property="renameFilename" column="RENAME_FILENAME"/>
		<result property="uploadTime" column="UPLOAD_TIME"/>
	</resultMap>
	<resultMap type="Reply" id="replyResultMap">
		<id property="replyNo" column="REPLY_NO"/>
		<result property="no" column="VISIT_NO"/>
		<result property="userId" column="USER_ID"/>
		<result property="nick" column="NICKNAME"/>
		<result property="contents" column="CONTENTS"/>
		<result property="enrollDate" column="REG_DATE"/>
	</resultMap>
	<select id="selectAll" resultMap="visitResultMap">
			SELECT VISIT_NO, USER_ID, NICKNAME, SITE_NO, VISIT_TITLE, VISIT_CONTENTS, VISIT_COUNT, V_CREATE_DATE, V_UPDATE_DATE, ORIGINAL_FILENAME, RENAME_FILENAME, UPLOAD_TIME FROM VISIT JOIN VISIT_FILE USING(VISIT_NO)JOIN MEMBER USING(USER_ID) ORDER BY VISIT_NO DESC
	</select>
	<select id="selectScroll" resultMap="visitResultMap">
		SELECT 
			VISIT_NO, 
			USER_ID, 
			NICKNAME, 
			SITE_NO, 
			VISIT_TITLE, 
			VISIT_CONTENTS, 
			VISIT_COUNT, 
			V_CREATE_DATE, 
			V_UPDATE_DATE, 
			ORIGINAL_FILENAME, 
			RENAME_FILENAME, 
			UPLOAD_TIME 
		FROM VISIT 
		JOIN VISIT_FILE USING(VISIT_NO)
		JOIN MEMBER USING(USER_ID)
       	ORDER BY VISIT_NO DESC
		<!-- History 하고 나서 -->		
		<!-- WHERE VISIT_NO &lt; #{visitNo }-20 -->
<!--SELECT
    VISIT_NO,
    USER_ID,
    NICKNAME,
    SITE_NO,
    SITE_NAME,
    VISIT_TITLE,
    VISIT_CONTENTS,
    VISIT_COUNT,
    V_CREATE_DATE,
    V_UPDATE_DATE,
    ORIGINAL_FILENAME,
    VISIT_FILE.RENAME_FILENAME,
    VISIT_FILE.UPLOAD_TIME
FROM
         VISIT
    JOIN VISIT_FILE USING ( VISIT_NO )
    JOIN MEMBER USING ( USER_ID )
    JOIN HISTORY USING ( SITE_NO ); -->
	</select>
		
	<select id="selectOne" resultMap="visitResultMap">
		SELECT VISIT_NO, USER_ID, NICKNAME, SITE_NO, VISIT_TITLE, VISIT_CONTENTS, VISIT_COUNT, V_CREATE_DATE, V_UPDATE_DATE, ORIGINAL_FILENAME, RENAME_FILENAME, UPLOAD_TIME FROM VISIT JOIN VISIT_FILE USING(VISIT_NO)JOIN MEMBER USING(USER_ID) WHERE VISIT_NO = #{visitNo } 
	</select>
	
	<select id="selectVisitListCount" resultType="_int" resultMap="visitResultMap">
      SELECT COUNT(*) FROM VISIT
    </select>

	<update id="updateHitCount">
		UPDATE VISIT
		SET VISIT_COUNT = VISIT_COUNT+1
		WHERE VISIT_NO = #{visitNo}
	</update>    
    
    <select id="selectHitCount" resultMap="visitResultMap">
    	SELECT VISIT_COUNT FROM VISIT WHERE VISIT_NO = #{visitNo}
    </select>
    
	<insert id="insertVisit">
		INSERT ALL 
		INTO VISIT VALUES(SEQ_VISIT.NEXTVAL, #{userId }, #{siteNo }, #{visitTitle }, #{visitContents }, DEFAULT, DEFAULT, DEFAULT)
		INTO VISIT_FILE VALUES(SEQ_VISIT_FILE.NEXTVAL, #{originalFilename }, #{renameFilename }, #{uploadTime }, SEQ_VISIT.NEXTVAL)
		SELECT * FROM DUAL
	</insert>
	
	<update id="updateVisit">
		UPDATE VISIT 
		SET VISIT_TITLE = #{visitTitle }, VISIT_CONTENTS = #{visitContents }, V_UPDATE_DATE = SYSDATE
		WHERE VISIT_NO = #{visitNo } 
	</update>
	
	<update id="updateVisitFile">
		UPDATE VISIT_FILE
		SET ORIGINAL_FILENAME = #{originalFilename }, RENAME_FILENAME = #{renameFilename } 
		WHERE VISIT_NO = #{visitNo }
	</update>
	
	<delete id="deleteVisit" parameterType="_int">
		DELETE VISIT WHERE VISIT_NO = #{visitNo }
	</delete>
	
	
	<!--  댓글 -->
	<select id="selectReply" resultMap="replyResultMap">
		SELECT REPLY_NO, VISIT_NO, USER_ID, CONTENTS, REG_DATE, NICKNAME FROM VISIT_REPLY JOIN MEMBER USING (USER_ID) WHERE VISIT_NO = #{no } ORDER BY REPLY_NO DESC
	</select>
	
	
	<insert id="insertReply">
		INSERT INTO VISIT_REPLY VALUES (SEQ_VISIT_REPLY.NEXTVAL, #{userId }, #{contents }, LOCALTIMESTAMP, #{no })
	</insert>
	
	<update id="updateReply">
		UPDATE VISIT_REPLY SET CONTENTS = #{contents } WHERE REPLY_NO = #{replyNo }
	</update>
	
	<delete id="deleteReply">
		DELETE VISIT_REPLY WHERE REPLY_NO = #{replyNo }
	</delete>
</mapper>