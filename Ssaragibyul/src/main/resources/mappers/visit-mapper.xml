<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="visitMapper">
	<resultMap type="Visit" id="visitResultMap">
		<id property="visitNo" column="VISIT_NO"/>
		<result property="userId" column="USER_ID"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="siteNo" column="SITE_NO"/>
		<result property="visitTitle" column="VISIT_TITLE"/>
		<result property="visitContents" column="VISIT_CONTENTS"/>
		<result property="visitCount" column="VISIT_COUNT"/>
		<result property="vCreateDate" column="V_CREATE_DATE"/>
		<result property="vUpdateDate" column="V_UPDATE_DATE"/>
		<result property="originalFilename" column="ORIGINAL_FILENAME"/>
		<result property="renameFilename" column="RENAME_FILENAME"/>
		<result property="uploadTime" column="UPLOAD_TIME"/>
	</resultMap>
	<resultMap type="Reply" id="replyResultMap">
		<id property="replyNo" column="REPLY_NO"/>
		<result property="no" column="VISIT_NO"/>
		<result property="userId" column="USER_ID"/>
		<result property="nick" column="NICKNAME"/>
		<result property="contents" column="CONTENTS"/>
		<result property="enrollDate" column="REG_DATE"/>
	</resultMap>
	<resultMap type="VisitLike" id="likeResultMap">
		<id property="likeNo" column="LIKE_NO"/>
		<result property="userId" column="USER_ID"/>
		<result property="likesYn" column="LIKES_YN"/>
		<result property="visitNo" column="VISIT_NO"/>
	</resultMap>
	<resultMap type="VisitStat" id="visitStatResultMap">
    	<result property="visitDay" column="VISIT_DAY"/>
        <result property="visitStatCount" column="VISIT_STAT_COUNT"/>
   </resultMap>
   
	<select id="selectAll" resultMap="visitResultMap">
		SELECT 
		    D.VISIT_NO,
		    D.USER_ID,
		    D.NICKNAME,
		    D.SITE_NO,
		    D.VISIT_TITLE,
		    D.VISIT_CONTENTS,
		    D.V_CREATE_DATE,
		    D.V_UPDATE_DATE,
		    D.ORIGINAL_FILENAME,
		    D.RENAME_FILENAME,
		    D.UPLOAD_TIME 
		FROM
		(
		SELECT     
		    A.VISIT_NO,
		    A.USER_ID,
		    C.NICKNAME,
		    A.SITE_NO,
		    A.VISIT_TITLE,
		    A.VISIT_CONTENTS,
		    A.V_CREATE_DATE,
		    A.V_UPDATE_DATE,
		    B.ORIGINAL_FILENAME,
		    B.RENAME_FILENAME,
		    B.UPLOAD_TIME 
		FROM
		    VISIT       A,
		    VISIT_FILE  B,
		    MEMBER      C
		WHERE A.USER_ID = C.USER_ID
		    AND    A.VISIT_NO = B.VISIT_NO
		      ORDER BY A.VISIT_NO DESC
		      )D
		    WHERE ROWNUM &lt;= 9
	</select>
	<select id="selectScroll" resultMap="visitResultMap">
		
		SELECT
			E.VISIT_NO,
		    E.USER_ID,
		    E.NICKNAME,
		    E.SITE_NO,
		    E.VISIT_TITLE,
		    E.VISIT_CONTENTS,
		    E.V_CREATE_DATE,
		    E.V_UPDATE_DATE,
		    E.ORIGINAL_FILENAME,
		    E.RENAME_FILENAME,
		    E.UPLOAD_TIME 
		FROM
			(
			SELECT 
			    D.VISIT_NO,
			    D.USER_ID,
			    D.NICKNAME,
			    D.SITE_NO,
			    D.VISIT_TITLE,
			    D.VISIT_CONTENTS,
			    D.V_CREATE_DATE,
			    D.V_UPDATE_DATE,
			    D.ORIGINAL_FILENAME,
			    D.RENAME_FILENAME,
			    D.UPLOAD_TIME 
			FROM
				(
				SELECT     
				    A.VISIT_NO,
				    A.USER_ID,
				    C.NICKNAME,
				    A.SITE_NO,
				    A.VISIT_TITLE,
				    A.VISIT_CONTENTS,
				    A.V_CREATE_DATE,
				    A.V_UPDATE_DATE,
				    B.ORIGINAL_FILENAME,
				    B.RENAME_FILENAME,
				    B.UPLOAD_TIME 
				FROM
				    VISIT       A,
				    VISIT_FILE  B,
				    MEMBER      C
				WHERE A.USER_ID = C.USER_ID
				    AND    A.VISIT_NO = B.VISIT_NO
				      ORDER BY A.VISIT_NO DESC
				      )D
		    WHERE VISIT_NO &lt; #{visitNo }
		    )E
		    WHERE ROWNUM &lt;= 5
		    
		<!-- History 하고 나서 -->		
		<!-- WHERE VISIT_NO &lt; #{visitNo }-20 -->
<!--SELECT
    VISIT_NO,
    USER_ID,
    NICKNAME,
    SITE_NO,
    SITE_NAME,
    VISIT_TITLE,
    VISIT_CONTENTS,
    VISIT_COUNT,
    V_CREATE_DATE,
    V_UPDATE_DATE,
    ORIGINAL_FILENAME,
    VISIT_FILE.RENAME_FILENAME,
    VISIT_FILE.UPLOAD_TIME
FROM
         VISIT
    JOIN VISIT_FILE USING ( VISIT_NO )
    JOIN MEMBER USING ( USER_ID )
    JOIN HISTORY USING ( SITE_NO ); -->
	</select>
		
	<select id="selectOne" resultMap="visitResultMap">
		SELECT VISIT_NO, USER_ID, NICKNAME, SITE_NO, VISIT_TITLE, VISIT_CONTENTS, VISIT_COUNT, V_CREATE_DATE, V_UPDATE_DATE, ORIGINAL_FILENAME, RENAME_FILENAME, UPLOAD_TIME FROM VISIT JOIN VISIT_FILE USING(VISIT_NO)JOIN MEMBER USING(USER_ID) WHERE VISIT_NO = #{visitNo } 
	</select>
	<select id="selectLastNo" resultMap="visitResultMap">
		SELECT
            VISIT_NO
        FROM
            (SELECT 
		    	VISIT_NO
			FROM
				(SELECT     
				    VISIT_NO
				FROM
				    VISIT       
				 ORDER BY VISIT_NO asc
			     ) 
            )
        WHERE ROWNUM = 1
	</select>
	<select id="selectVisitListCount" resultType="_int">
      SELECT COUNT(*) FROM VISIT
    </select>
    
	<update id="updateHitCount">
		UPDATE VISIT
		SET VISIT_COUNT = VISIT_COUNT+1
		WHERE VISIT_NO = #{visitNo}
	</update>    
    
    <select id="selectHitCount" resultMap="visitResultMap">
    	SELECT VISIT_COUNT FROM VISIT WHERE VISIT_NO = #{visitNo}
    </select>
    
	<insert id="insertVisit">
		INSERT ALL 
		INTO VISIT VALUES(SEQ_VISIT.NEXTVAL, #{userId }, #{siteNo }, #{visitTitle }, #{visitContents }, DEFAULT, DEFAULT, DEFAULT)
		INTO VISIT_FILE VALUES(SEQ_VISIT_FILE.NEXTVAL, #{originalFilename }, #{renameFilename }, #{uploadTime }, SEQ_VISIT.NEXTVAL)
		SELECT * FROM DUAL
	</insert>
	
	<update id="updateVisit">
		UPDATE VISIT 
		SET VISIT_TITLE = #{visitTitle }, VISIT_CONTENTS = #{visitContents }, V_UPDATE_DATE = SYSDATE
		WHERE VISIT_NO = #{visitNo } 
	</update>
	
	<update id="updateVisitFile">
		UPDATE VISIT_FILE
		SET ORIGINAL_FILENAME = #{originalFilename }, RENAME_FILENAME = #{renameFilename } 
		WHERE VISIT_NO = #{visitNo }
	</update>
	
	<delete id="deleteVisit" parameterType="_int">
		DELETE VISIT WHERE VISIT_NO = #{visitNo }
	</delete>
	
	<select id="searchAll" resultMap="visitResultMap">
		SELECT * FROM VISIT JOIN MEMBER USING (USER_ID) JOIN VISIT_FILE USING (VISIT_NO)
		WHERE NICKNAME LIKE '%' || #{searchValue } || '%'
		OR VISIT_TITLE LIKE '%' || #{searchValue } || '%'
		OR VISIT_CONTENTS LIKE '%' || #{searchValue } || '%'
		ORDER BY V_CREATE_DATE DESC
	</select>
	<!--  댓글 -->
	<select id="selectReply" resultMap="replyResultMap">
		SELECT REPLY_NO, VISIT_NO, USER_ID, CONTENTS, REG_DATE, NICKNAME FROM VISIT_REPLY JOIN MEMBER USING (USER_ID) WHERE VISIT_NO = #{no } ORDER BY REPLY_NO DESC
	</select>
	
	
	<insert id="insertReply">
		INSERT INTO VISIT_REPLY VALUES (SEQ_VISIT_REPLY.NEXTVAL, #{userId }, #{contents }, LOCALTIMESTAMP, #{no })
	</insert>
	
	<update id="updateReply">
		UPDATE VISIT_REPLY SET CONTENTS = #{contents } WHERE REPLY_NO = #{replyNo }
	</update>
	
	<delete id="deleteReply">
		DELETE VISIT_REPLY WHERE REPLY_NO = #{replyNo }
	</delete>
	
	<!-- 좋아요  -->
    <insert id="plusLikesCount">
    	INSERT INTO VISIT_LIKE VALUES(SEQ_VISIT_LIKES.NEXTVAL, #{userId }, 'Y', #{visitNo })
    </insert>
    
    <delete id="minusLikesCount">
    	DELETE VISIT_LIKE WHERE VISIT_NO = #{visitNo } AND USER_ID = #{userId } 
    </delete>
    
    <select id="getLikes" resultType="_int">
    	SELECT COUNT (*) FROM VISIT_LIKE WHERE VISIT_NO = #{visitNo } 
    </select>
    
    <select id="checkLikes" resultType="Integer" parameterType="com.ssaragibyul.visit.domain.VisitLike" resultMap="likeResultMap">
    	SELECT LIKES_YN FROM VISIT_LIKE WHERE USER_ID = #{userId } AND VISIT_NO = #{visitNo }
    </select>
    
	<!-- Status -->
	<select id="selectCountPostVisit" resultMap="visitStatResultMap">
      SELECT DAY_NAME "VISIT_DAY", NVL(STAT_COUNT, 0) "VISIT_STAT_COUNT" FROM (
      SELECT DAY, COUNT(*) "STAT_COUNT" FROM(
      SELECT TO_CHAR(V_CREATE_DATE, 'D') "DAY_ORDER", CASE
      WHEN TO_CHAR(V_CREATE_DATE, 'D') = '1' THEN '일'
      WHEN TO_CHAR(V_CREATE_DATE, 'D') = '2' THEN '월'
      WHEN TO_CHAR(V_CREATE_DATE, 'D') = '3' THEN '화'
      WHEN TO_CHAR(V_CREATE_DATE, 'D') = '4' THEN '수'
      WHEN TO_CHAR(V_CREATE_DATE, 'D') = '5' THEN '목'
      WHEN TO_CHAR(V_CREATE_DATE, 'D') = '6' THEN '금'
      WHEN TO_CHAR(V_CREATE_DATE, 'D') = '7' THEN '토'
      END "DAY"
      FROM VISIT ORDER BY 1) GROUP BY DAY, DAY_ORDER ORDER BY DAY_ORDER ASC) RIGHT OUTER JOIN DAY_LEVEL ON DAY = DAY_NAME
    </select>
</mapper>